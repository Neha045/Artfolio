{"version":3,"sources":["comps/Title.js","firebase/config.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","App.js","index.js"],"names":["Title","className","firebaseConfig","apiKey","process","API_KEY","authDomain","AUTH_DOMAIN","databaseURL","DATABASE_URL","projectId","storageBucket","STORAGE_BUCKET","messagingSenderId","MESSAGING_SENDER_ID","appId","API_ID","firebase","projectStorage","projectFirestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","div","initial","width","animate","UploadForm","types","type","onChange","e","selected","target","files","includes","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","console","log","map","key","layout","whileHover","opacity","scale","s","onClick","img","src","alt","transition","delay","Modal","selectedImg","classList","contains","y","duration","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df6fcd4c.chunk.js","sourcesContent":["import React from 'react';\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>FireGram</h1>\n      <h2>Your Pictures</h2>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n    </div>\n  )\n}\n\nexport default Title;","import * as firebase from 'firebase/app';\r\nimport 'firebase/storage';\r\nimport 'firebase/firestore';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: `${process.env.API_KEY}`,\r\n    authDomain: `${process.env.AUTH_DOMAIN}`,\r\n    databaseURL: `${process.env.DATABASE_URL}`,\r\n    projectId: `fire-gram-1cdde`,\r\n    storageBucket: `${process.env.STORAGE_BUCKET}`,\r\n    messagingSenderId: `${process.env.MESSAGING_SENDER_ID}`,\r\n    appId: `${process.env.API_ID}`\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const projectStorage = firebase.storage();\r\n  const projectFirestore =firebase.firestore();\r\n  const timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\n  export{ projectStorage, projectFirestore, timestamp};","import{ useState, useEffect } from 'react';\r\nimport{ projectStorage, projectFirestore, timestamp } from '../firebase/config';\r\n\r\nconst useStorage = (file) => {\r\n    const [progress, setProgress] = useState(0);\r\n    const [error, setError] = useState(null);\r\n    const [url, setUrl] = useState(null);\r\n\r\n    useEffect(() => {\r\n        //referenses\r\n        const storageRef = projectStorage.ref(file.name);\r\n        const collectionRef = projectFirestore.collection('images');\r\n\r\n        storageRef.put(file).on('state_changed', (snap) => {\r\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n            setProgress(percentage);\r\n        }, (err) => {\r\n            setError(err);\r\n        },async () => {\r\n            const url = await storageRef.getDownloadURL();\r\n            const createdAt = timestamp();\r\n            collectionRef.add({ url, createdAt });\r\n            setUrl(url);\r\n        })\r\n    }, [file]);\r\n\r\n    return{ progress, url, error }\r\n\r\n}\r\n\r\nexport default useStorage;","import React, { useEffect } from 'react';\r\nimport useStorage from '../hooks/useStorage';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst ProgressBar = ({file, setFile}) => {\r\n    const{ url, progress} = useStorage(file);\r\n    \r\n    useEffect(() => {\r\n        if(url) {\r\n            setFile(null);\r\n        }\r\n    },[url, setFile])\r\n\r\n    return (\r\n        <motion.div className='progress-bar' \r\n            initial={{width:0}}\r\n            animate={{width: progress + '%'}}    \r\n        >\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default ProgressBar;\r\n","import React, { useState } from 'react';\r\nimport ProgressBar from './ProgressBar';\r\n\r\nconst UploadForm = () => {\r\n\r\n    const [file, setFile] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    const types = ['image/png', 'image/jpeg'];\r\n\r\n    const changeHandler = (e) => {\r\n        let selected = e.target.files[0];\r\n\r\n        if(selected && types.includes(selected.type)) {\r\n            setFile(selected);\r\n            setError(' ');\r\n        }else{\r\n            setFile(null);\r\n            setError('Please select an image file (png or jpeg)');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form>\r\n            <label>\r\n                <input type=\"file\" onChange={changeHandler} />\r\n                <span>+</span>\r\n            </label>\r\n            <div className=\"output\">\r\n            { error && <div className=\"error\">{ error }</div>}\r\n            { file && <div>{ file.name }</div> }\r\n            {file && <ProgressBar file = {file} setFile={setFile}/>}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default UploadForm\r\n","import{ useState, useEffect } from 'react';\r\nimport{ projectFirestore } from '../firebase/config';\r\n\r\nconst useFirestore = (collection) => {\r\n    const [docs, setDocs] = useState([]);\r\n\r\n    useEffect (() => {\r\n        const unsub = projectFirestore.collection(collection)\r\n            .orderBy('createdAt', 'desc')\r\n            .onSnapshot((snap) => {\r\n                let documents = [];\r\n                snap.forEach(doc => {\r\n                    documents.push({...doc.data(), id: doc.id})\r\n                });\r\n                setDocs(documents);\r\n            });\r\n\r\n        return () => unsub();\r\n    }, [collection])\r\n\r\n    return { docs };\r\n}\r\n\r\nexport default useFirestore;\r\n","import React from 'react';\r\nimport useFirestore from '../hooks/useFirestore';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst ImageGrid = ({ setSelectedImg }) => {\r\n    const { docs } =useFirestore('images');\r\n    console.log(docs);\r\n    return (\r\n        <div className='img-grid'>\r\n            { docs && docs.map(doc => (\r\n                <motion.div \r\n                    className= 'img-wrap' key={doc.id} \r\n                    layout\r\n                    whileHover={{ opacity: 1, scale: 1.05 }}s \r\n                    onClick={() => setSelectedImg(doc.url)}\r\n                >\r\n                    <motion.img src={doc.url} alt = 'uploaded-pic'\r\n                      initial={{ opacity: 0 }}\r\n                      animate={{ opacity: 1 }}\r\n                      transition={{ delay: 1 }} />\r\n                </motion.div>    \r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageGrid;\r\n","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst Modal = ({ selectedImg, setSelectedImg }) => {\r\n\r\n    const handleClick = (e) => {\r\n        if(e.target.classList.contains('backdrop')){\r\n            setSelectedImg(null);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <motion.div className='backdrop' onClick={handleClick}\r\n         initial={{opacity: 0}}\r\n         animate={{opacity: 1}}\r\n        >\r\n            <motion.img src={selectedImg} alt='enlarged'\r\n             initial={{ y: '-100vh'}} \r\n             animate={{ y: '0'}}\r\n             transition={{ duration: 1 }}\r\n            />\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default Modal;\r\n","import React, { useState } from 'react';\nimport Title from './comps/Title';\nimport UploadForm from './comps/UploadForm';\nimport ImageGrid from './comps/ImageGrid';\nimport Modal from './comps/Modal';\n\nfunction App() {\n  const [selectedImg, setSelectedImg] = useState(null);\n\n  return (\n    <div className=\"App\">\n      <Title/>\n      <UploadForm/>\n      <ImageGrid setSelectedImg={setSelectedImg} />\n      { selectedImg && <Modal selectedImg={ selectedImg }setSelectedImg={setSelectedImg}/>}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}